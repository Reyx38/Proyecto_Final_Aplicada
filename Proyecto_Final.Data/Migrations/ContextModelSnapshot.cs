// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Final.Data.Contexto;

#nullable disable

namespace Proyecto_Final.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Final.Data.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Provicia")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Proyecto_Final.Data.Models.Taxistas", b =>
                {
                    b.Property<int>("TaxistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaxistaId"));

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExisteLicencia")
                        .HasColumnType("bit");

                    b.Property<bool>("ExisteVehiculo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Provicia")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("TaxistaId");

                    b.HasIndex("ClientesClienteId");

                    b.ToTable("Taxistas");

                    b.HasData(
                        new
                        {
                            TaxistaId = 1,
                            Correo = "federicoLiranzo01@gmail.com",
                            ExisteLicencia = true,
                            ExisteVehiculo = true,
                            FechaNacimiento = new DateTime(1985, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NickName = "El compa",
                            Nombres = "Federico Liranzo",
                            Password = "elcompa1985",
                            Provicia = 0,
                            Role = "Taxista",
                            Status = 1
                        },
                        new
                        {
                            TaxistaId = 2,
                            Correo = "cesarpolanco1@gmail.com",
                            ExisteLicencia = true,
                            ExisteVehiculo = true,
                            FechaNacimiento = new DateTime(1995, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NickName = "Sorollo",
                            Nombres = "Cesar Polanco",
                            Password = "sorollo1995",
                            Provicia = 0,
                            Role = "Taxista",
                            Status = 1
                        },
                        new
                        {
                            TaxistaId = 3,
                            Correo = "martinperez90@gmail.com",
                            ExisteLicencia = true,
                            ExisteVehiculo = false,
                            FechaNacimiento = new DateTime(1990, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NickName = "El Tino",
                            Nombres = "Martin Perez",
                            Password = "eltino1990",
                            Provicia = 0,
                            Role = "Taxista",
                            Status = 1
                        },
                        new
                        {
                            TaxistaId = 4,
                            Correo = "juanrodriguez87@gmail.com",
                            ExisteLicencia = false,
                            ExisteVehiculo = true,
                            FechaNacimiento = new DateTime(1987, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NickName = "El Rápido",
                            Nombres = "Juan Rodríguez",
                            Password = "rapido1987",
                            Provicia = 0,
                            Role = "Taxista",
                            Status = 1
                        },
                        new
                        {
                            TaxistaId = 5,
                            Correo = "carlosherrera92@gmail.com",
                            ExisteLicencia = true,
                            ExisteVehiculo = true,
                            FechaNacimiento = new DateTime(1992, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NickName = "Chico",
                            Nombres = "Carlos Herrera",
                            Password = "chico1992",
                            Provicia = 0,
                            Role = "Taxista",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Proyecto_Final.Data.Models.Taxistas", b =>
                {
                    b.HasOne("Proyecto_Final.Data.Models.Clientes", null)
                        .WithMany("Favoritos")
                        .HasForeignKey("ClientesClienteId");
                });

            modelBuilder.Entity("Proyecto_Final.Data.Models.Clientes", b =>
                {
                    b.Navigation("Favoritos");
                });
#pragma warning restore 612, 618
        }
    }
}
