@page "/Prueba"
@using ReyAI_Trasport.Data.Models


@inject CiudadServices ciudadServices
@inject ViajesRapidosServices viajeRServices
@inject TaxistaServices taxistaServices
@inject DestinosCercasServices destinoCercaServices


<div class="container">
    <div class="card-header">
        <h3>PruebaPicket</h3>
    </div>
    <div>
        <div >
            <div>
                <CrearViajesRapidos ListaDestinosCerca="ListaDestinoCerca"
                                  ListaTaxistas="ListaTaxistas"
                                  ViajeRapidoDto="ViajRapidoseDto"
                                  ViajeRegistrado="Guardar" />

            </div>
        </div>
    </div>
</div>
@Mensaje
<style>
    body{
        background-color: cadetblue;
    }
</style>
@code {
    public List<DestinoCercaDto> ListaDestinoCerca { get; set; } = new List<DestinoCercaDto>();
    public List<TaxistaDto> ListaTaxistas { get; set; } = new List<TaxistaDto>();
    public ViajesRapidosDto ViajRapidoseDto { get; set; } = new ViajesRapidosDto();
    public string Mensaje { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaDestinoCerca = await destinoCercaServices.Listar(a => a.DestinoCercaId > 0);
        ListaTaxistas = await taxistaServices.Listar(a => a.TaxistaId != "");
    }

    private async Task Guardar(ViajesRapidosDto viaje)
    {
        // if (await Validar())
        // {
        //     Toast.Notify(new(ToastType.Danger, $"Ya existe un combo con este ID"));
        //     return;
        // }

        var crear = await viajeRServices.Guardar(viaje);

        if (crear)
        {
            Mensaje = "Creado correctamente";
            await Task.Delay(2000);
            //navigationManager.NavigateTo("/Index");
        }
        else
        {
            Mensaje = "No se ha creado correctamente";
        }

    }
}
