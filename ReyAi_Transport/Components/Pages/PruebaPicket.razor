@page "/Prueba"


@inject CiudadServices ciudadServices
@inject ViajeServices viajeServices
@inject TaxistaServices taxistaServices


<div class="container">
    <div class="card-header">
        <h3>PruebaPicket</h3>
    </div>
    <div class="card-body">
        <div class="cont">
            <div class="glass-effect">
                <CrearViajeRapido ListaCiudades="ListaCiudades"
                                  ListaTaxistas="ListaTaxistas"
                                  ViajeDto="ViajeDto"
                                  ViajeRegistrado="Guardar" />

            </div>
        </div>
    </div>
</div>
<style>
    body{
        background-color: cadetblue;
    }
   
    .cont{
        width: 45rem;
        height: 30rem;
        border: 3px solid rgba(250, 250, 250, 0.1); /* Borde con opacidad */
        margin: 0 auto;
        border-radius: 1rem;
        position: relative;
    }

    .glass-effect {
        background: rgba(255, 255, 255, 0.1); /* Fondo semi-transparente */
        backdrop-filter: blur(10px); /* Efecto de desenfoque en el fondo */
        border-radius: 5rem;
        padding: 10px;
        width: 100%;
        height: 100%;
        position: absolute;
    }
</style>
@code {
    public List<Ciudades> ListaCiudades { get; set; } = new List<Ciudades>();
    public List<Taxistas> ListaTaxistas { get; set; } = new List<Taxistas>();
    public ViajesDto ViajeDto { get; set; } = new ViajesDto();
    public string Mensaje { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ciudadServices.Listar(a => a.CiudadId > 0);
        await taxistaServices.Listar(a => a.TaxistaId != "");
    }

    private async Task Guardar(ViajesDto viaje)
    {
        // if (await Validar())
        // {
        //     Toast.Notify(new(ToastType.Danger, $"Ya existe un combo con este ID"));
        //     return;
        // }

        var crear = await viajeServices.Guardar(viaje);

        if (crear)
        {
            Mensaje = "Creado correctamente";
            await Task.Delay(2000);
            //navigationManager.NavigateTo("/Index");
        }
        else
        {
            Mensaje = "No se ha creado correctamente";
        }

    }
}
