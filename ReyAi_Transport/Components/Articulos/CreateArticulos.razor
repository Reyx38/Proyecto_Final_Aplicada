@page "/Create/Articulos"
@page "/Create/Articulos/{ArticuloId:int}"


@attribute [Authorize(Roles = "Admin")]

@inject ArticulosServices articulosServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer
@inject ToastService Toast
<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />
<link rel="stylesheet" href="/Estilos/Viajes/Crear.css" />

<PageTitle>Articulos</PageTitle>
<EditForm Model="ArticuloDto" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="overlay"></div>
	<div class="container">
		<div class="overlay card">
			<div class="card-header">
				<h2>Registro de articulos</h2>
			</div>
			<div class="card-body">

				<div class="row mb-3">
					@*Descripcion*@
					<div class="col-md-4">
						<label class="form-label">Descripcion</label>
					</div>
					@*Costo*@
					<div class="col-md-4">
						<label class="form-label">Costo</label>
					</div>
					@*Precio*@
					<div class="col-md-4">
						<label class="form-label fs-6">Precio</label>
					</div>
					
				</div>
				<div class="row mb-3">
					@*Descripcion*@
					<div class="col-md-4">
						<InputText class="form-control" @bind-Value="ArticuloDto.Descripcion"></InputText>
						<ValidationMessage For="(()=> ArticuloDto.Descripcion)" />
					</div>
					@*Costo*@
					<div class="col-md-4">
						<InputNumber class="form-control" @bind-Value="ArticuloDto.Costo"  placeholder="DOP$"></InputNumber>
						<ValidationMessage For="(()=> ArticuloDto.Costo)" />
					</div>
					@*Precio*@
					<div class="col-md-4">
						<InputNumber class="form-control" @bind-Value="ArticuloDto.Precio" placeholder="DOP$"></InputNumber>
						<ValidationMessage For="(() => ArticuloDto.Precio)" />
					</div>
					
				</div>
				<div class="row mb-3">
					
					@*Existencia*@
					<div class="col-md-4">
						<label class="form-label fs-6">Existencia</label>
					</div>
				</div>
				<div class="row mb-3">
				
					@*Existencia*@
					<div class="col-md-4">
						<InputNumber class="form-control" @bind-Value="ArticuloDto.Existencia"></InputNumber>
						<ValidationMessage For="(()=> ArticuloDto.Existencia)" />
					</div>
				</div>
					
				<div class="card-footer">
					<a href="/Articulos" class="btn btn-light bi bi-arrow-left-square "> Volver</a>
					<button type="submit" class="btn btn-danger mt-2 bi bi-floppy"> Guardar</button>
				</div>
			</div>
		</div>
	</div>

</EditForm>

@code {
	[Parameter]
	public int ArticuloId {get; set;}

	public ArticulosDto ArticuloDto { get; set; } = new ArticulosDto();
	public string Mensaje { get; set; }

	protected override async Task OnInitializedAsync()
	{
		if(ArticuloId != 0)
		{
			ArticuloDto = await articulosServices.Buscar(ArticuloId);
		}
	}

	private async Task<bool> Validar()
	{
		var valido = await articulosServices.ExisteArticulo(ArticuloDto.Descripcion, ArticuloDto.ArticuloId);
		return valido;
	}

	private async Task Guardar()
	{
		if (await Validar())
		{
			Toast.Notify(new(ToastType.Info, $"Ya existe un articulo con esta descripcion"));
			await Task.Delay(3000);
			return;
		}

		var crear = await articulosServices.Guardar(ArticuloDto);

		if (crear)
		{
			Toast.Notify(new(ToastType.Success, $"Se a agreado con exito!"));
			await Task.Delay(3000);
			navigationManager.NavigateTo("/Articulos");
		}
        else
        {
			Toast.Notify(new(ToastType.Danger, $"No se a agreado con exito. Favor intentelo de nuevo."));
        }
    }
}
