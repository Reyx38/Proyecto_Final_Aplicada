@page "/Taxista/Crear"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject CiudadServices CiudadService
@inject TaxistaServices TaxistaService
@inject NavigationManager NavigationManager
@inject ToastService Toast
<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />

<link rel="stylesheet" href="/Estilos/Viajes/Crear.css" />

<PageTitle>Agregar Conductor</PageTitle>
<EditForm Model="@TaxistaDto" OnValidSubmit="Guardar" FormName="CrearTAXISTA">
	<DataAnnotationsValidator />
	<div class="overlay"></div>

	<div class="container">
		<div class="card">
			<div class="card-header">
				<div class="card-title">Crear Taxista </div>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="form-group">
						<label class="form-label">Username</label>
						<InputText class="form-control" @bind-Value="@TaxistaDto.NickName" />
						<ValidationMessage For="@(() => TaxistaDto.NickName)" />
					</div>
				</div>

				<div class="row">
					<div class="form-group">
						<label class="form-label">Ciudad</label>
						<InputSelect class="form-select" @bind-Value="@TaxistaDto.CiudadId">
							<option selected disabled value="0">-- Seleccione una ciudad de trabajo --</option>
							@foreach (var ciudad in ListCiudades)
							{
								<option value="@ciudad.CiudadId">@ciudad.Nombre</option>
							}
						</InputSelect>
						<ValidationMessage For="@(() => TaxistaDto.CiudadId)" />
					</div>
				</div>
			</div>

			<div class="row">
				<div class="form-group">
					<label class="form-label">Contraseña</label>
					<InputText type="password" class="form-control" @bind-Value="TaxistaDto.Password" placeholder="Contraseña"></InputText>
					<ValidationMessage For="@(() => TaxistaDto.Password)" />
				</div>
				<div class="form-group">
					<label class="form-label">Confirmar contraseña</label>
					<InputText type="password" class="form-control" @bind-Value="ConfirmPassword" placeholder="Contraseña"></InputText>
					<ValidationMessage For="@(() => TaxistaDto.Password)" />
				</div>
			</div>

			<div class=" card-footer">
				<a href="/" class="btn btn-light">Volver</a>
				<button type="submit" class="btn btn-Guardar">Guardar</button>
			</div>

		</div>

	</div>
</EditForm>


@code {
	public TaxistaDto TaxistaDto { get; set; } = new();
	public List<CiudadesDto> ListCiudades { get; set; } = [];
	public string ConfirmPassword { get; set; } = "";

	protected override async Task OnInitializedAsync()
	{
		ListCiudades = await CiudadService.Listar(c => true);
	}
	public async Task Guardar()
	{
		var guardado = await TaxistaService.Guardar(TaxistaDto);
		if (guardado)
		{
			Toast.Notify(new(ToastType.Success, $"Nuevo taxista agregado correctamente."));
			await Task.Delay(3000);
			NavigationManager.NavigateTo("/");
		}
		else
		{
			Toast.Notify(new(ToastType.Danger, $"Nuevo taxista no fue agregado correctamente."));
		}

	}
}
