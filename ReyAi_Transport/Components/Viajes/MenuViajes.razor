@page "/Viajes/ViajesDisponible"
@rendermode InteractiveServer
@inject ViajeServices ViajeService
@inject CiudadServices CiudadService
<link rel="stylesheet" href="/Estilos/Viajes/ViajesLista.css" />

<div class="container">
    <div class="overlay">
        <h3 class="text-center text-white filtro-titulo">¿A dónde quieres viajar?</h3>
        <ul class="filters_menu">
            @foreach (var filtro in Ciudades)
            {
                <li @onclick="() => SeleccionarFiltro(filtro)"
                    class="@(FiltroActivo == filtro.Nombre ? "active" : "")">
                    @filtro.Nombre
                </li>
            }
        </ul>
        <div class="tarjetas-contenedor">
            @foreach (var viaje in ListViajes)
            {
                <TarjetaViaje Viaje="viaje" />
            }
        </div>
    </div>
</div>

@code {
    public List<ViajesDto> ListViajes { get; set; } = new List<ViajesDto>();
    public List<CiudadesDto> Ciudades { get; set; } = new List<CiudadesDto>();
    public string? FiltroActivo { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        Ciudades = await CiudadService.Listar(c => true); // Cargar lista de ciudades
        ListViajes = await ViajeService.Listar(v => true); // Cargar todos los viajes inicialmente
    }

    public async Task SeleccionarFiltro(CiudadesDto ciudad)
    {
        ListViajes.Clear();

        if(FiltroActivo != ciudad.Nombre)
        {
            FiltroActivo = ciudad.Nombre;
            ListViajes = await ViajeService.Listar(v => v.Destino == ciudad.CiudadId);
        }
        else
        {
            FiltroActivo = null;
            ListViajes = await ViajeService.Listar(v => true); 
        }
        
    }
}
