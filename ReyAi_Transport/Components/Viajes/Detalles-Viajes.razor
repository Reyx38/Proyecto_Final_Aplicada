@page "/Viajes/Detalles/{ViajeId:int}"
@using Proyecto_Final.Services.Services
<link rel="stylesheet" href="/Estilos/Viajes/ViajesDetalles.css" />

@rendermode InteractiveServer

@inject ViajeServices ViajeService
@inject CiudadServices CiudadesService
@inject TaxistaServices taxistasService
@inject EstadoServices EstadoServices
<div class="container">
	<div class="overlay">
		<div class="detalles-container">
			<h2 class="titulo">Detalles del Viaje</h2>

			<div class="destino-info">
				<h3>¡Ven con nosotros a <span class="ciudad">@CiudadDto.Nombre</span>!</h3>
			</div>

			<div id="carouselExampleInterval" class="carousel slide" data-bs-ride="carousel">
				<div class="carousel-inner">
					@foreach (var imagen in Viaje.Imagenes)
					{
						<div class="carousel-item @(imagen == Viaje.Imagenes.First() ? "active" : "")" data-bs-interval="3000">
							<img src="@imagen.Base64" class="d-block w-100" alt="Imagen del viaje">
						</div>
					}
				</div>
				<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="prev">
					<span class="carousel-control-prev-icon" aria-hidden="true"></span>
					<span class="visually-hidden">Anterior</span>
				</button>
				<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="next">
					<span class="carousel-control-next-icon" aria-hidden="true"></span>
					<span class="visually-hidden">Siguiente</span>
				</button>
			</div>

			<div class="informacion-adicional">
				<p class="precio">Precio:DOP  $<span>@Viaje.Precio.ToString("N2")</span> </p>
				<p class="taxista">Taxista asignado: <span>@TaxistaDto.NickName</span></p>
				<p class="estado">Estado del viaje: <span>@EstadosViajesDto.Descripcion</span></p>
			</div>
		</div>
	</div>
</div>


@code {
	[Parameter]
	public int ViajeId { get; set; }

	public ViajesDto Viaje { get; set; } = new ViajesDto();
	public CiudadesDto CiudadDto { get; set; } = new CiudadesDto();
	public EstadosViajesDto EstadosViajesDto { get; set; } = new EstadosViajesDto();
	public TaxistaDto TaxistaDto { get; set; } = new TaxistaDto();

	protected override async Task OnInitializedAsync()
	{
		Viaje = await ViajeService.Buscar(ViajeId);
		CiudadDto = await CiudadesService.Buscar(Viaje.Destino);
		TaxistaDto = await taxistasService.Buscar(Viaje.TaxistaId);
		EstadosViajesDto = await EstadoServices.Buscar(Viaje.EstadoId);
	}
}
