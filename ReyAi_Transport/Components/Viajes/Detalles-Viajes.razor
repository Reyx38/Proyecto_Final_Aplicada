@page "/Viajes/Detalles/{ViajeId:int}"
@using Proyecto_Final.Services.Services
<link rel="stylesheet" href="/Estilos/Viajes/ViajesDetalles.css" />

@rendermode InteractiveServer

@inject ViajeServices ViajeService
@inject CiudadServices CiudadesService
@inject TaxistaServices taxistasService
@inject EstadoServices EstadoServices
@inject NavigationManager NavigationManager
<div class="container">
	<div class="overlay">
		<div class="detalles-container">
			<h2 class="titulo">Detalles del Viaje</h2>

			<div class="destino-info">
				<h3>¡Ven con nosotros a <span class="ciudad">@CiudadDto.Nombre</span>!</h3>
			</div>

			<div id="carouselExampleInterval" class="carousel slide" data-bs-ride="carousel">
				<div class="carousel-inner">
					@foreach (var imagen in Viaje.Imagenes)
					{
						<div class="carousel-item @(imagen == Viaje.Imagenes.First() ? "active" : "")" data-bs-interval="3000">
							<img src="@imagen.Base64" class="d-block w-100" alt="Imagen del viaje">
						</div>
					}
				</div>
				<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="prev">
					<span class="carousel-control-prev-icon" aria-hidden="true"></span>
					<span class="visually-hidden">Anterior</span>
				</button>
				<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="next">
					<span class="carousel-control-next-icon" aria-hidden="true"></span>
					<span class="visually-hidden">Siguiente</span>
				</button>
			</div>

			<div class="informacion-adicional">
				<p>Descripicion: <br/> @Viaje.Descripcion</p>
				<p class="f small">
					Fecha de inicio-Fecha de cierre <br />
					@Viaje.FechaInicio.ToString("dd/MM/yyyy") --- @Viaje.FechaCierre.ToString("dd/MM/yyyy")
				</p>
				<p class="taxista">Taxista asignado: <span>@TaxistaDto.NickName</span></p>
				<p class="estado">Estado del viaje: <span>@EstadosViajesDto.Descripcion</span></p>
				<p class="precio">Precio por persona:DOP  $<span>@Viaje.Precio.ToString("N2")</span> </p>
			</div>
			<button @onclick="() => Reservar(Viaje.ViajeId)" class="button">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" viewBox="0 0 24 24" height="24" fill="none" class="svg-icon"><g stroke-width="2" stroke-linecap="round" stroke="#fff"><rect y="5" x="4" width="16" rx="2" height="16"></rect><path d="m8 3v4"></path><path d="m16 3v4"></path><path d="m4 11h16"></path></g></svg>
				<span class="lable">Reservar</span>
			</button>
		</div>
	</div>
</div>
<style>
	/* From Uiverse.io by andrew-demchenk0 */ 
.a {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 9px 12px;
  gap: 8px;
  height: 40px;
  width: 201px;
  border: none;
  background: #FF342B;
  border-radius: 20px;
  cursor: pointer;
}

.lable {
  line-height: 22px;
  font-size: 17px;
  color: #fff;
  font-family: sans-serif;
  letter-spacing: 1px;
}

.button:hover {
  background: #e52e26;
}

.button:hover .svg-icon {
  animation: slope 1s linear infinite;
}

</style>


@code {
	[Parameter]
	public int ViajeId { get; set; }

	public ViajesDto Viaje { get; set; } = new ViajesDto();
	public CiudadesDto CiudadDto { get; set; } = new CiudadesDto();
	public EstadosViajesDto EstadosViajesDto { get; set; } = new EstadosViajesDto();
	public TaxistaDto TaxistaDto { get; set; } = new TaxistaDto();

	protected override async Task OnInitializedAsync()
	{
		Viaje = await ViajeService.Buscar(ViajeId);
		CiudadDto = await CiudadesService.Buscar(Viaje.Destino);
		TaxistaDto = await taxistasService.Buscar(Viaje.TaxistaId);
		EstadosViajesDto = await EstadoServices.Buscar(Viaje.EstadoId);
	}
	public void Reservar(int id)
	{
		NavigationManager.NavigateTo($"/Reservacion/{id}");
	}
}
