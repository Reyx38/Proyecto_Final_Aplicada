@using Proyecto_Final.Services.Services
<link rel="stylesheet" href="/Estilos/Viajes/TarjetaViajes.css" />
@rendermode InteractiveServer

@inject CiudadServices CiudadesService
@inject TaxistaServices taxistasService
@inject EstadoServices EstadoServices

<div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.5s" style="visibility: visible; animation-delay: 0.5s; animation-name: fadeInUp;">
    <div class="property-item rounded overflow-hidden">
        <div class="position-relative overflow-hidden">
            <a href=""><img src="@ImagenDto.Base64" alt="@ImagenDto.Alt" title="@ImagenDto.Titulo" class="img-fluid" style="height:200px;"/></a>
            <div class="bg-white rounded-top text-primary position-absolute start-0 bottom-0 mx-4 pt-1 px-3">@EstadosViajesDto.Descripcion</div>
        </div>
        <div class="p-4 pb-0">
            <h5 class="text-primary mb-3">Precio por persona</h5>
            <p><i class="fa fa-map-marker-alt text-primary me-2"></i>DOP $@Viaje.Precio.ToString("N2")</p>
            <a class="d-block h5 mb-2" href="">@CiudadDto.Nombre</a>
            <p><i class="fa fa-map-marker-alt text-primary me-2"></i>@Viaje.FechaInicio.ToString("dd/MM/yyyy")</p>
        </div>
        <div class="d-flex border-top">
            <small class="flex-fill text-center border-end py-2"><i class="fa fa-ruler-combined text-primary me-2"></i>Limite @Viaje.personas</small>
            <small class="flex-fill text-center border-end py-2"><i class="fa fa-bed text-primary me-2"></i>@TaxistaDto.NickName</small>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ViajesDto Viaje { get; set; } = new ViajesDto();

    public ImagenDto ImagenDto { get; set; } = new ImagenDto();
    public CiudadesDto CiudadDto { get; set; } = new CiudadesDto();
    public EstadosViajesDto EstadosViajesDto { get; set; } = new EstadosViajesDto();
    public TaxistaDto TaxistaDto { get; set; } = new TaxistaDto();

    protected override async Task OnInitializedAsync()
    {
        ImagenDto = Viaje.Imagenes.First();
        CiudadDto = await CiudadesService.Buscar(Viaje.Destino);
        TaxistaDto = await taxistasService.Buscar(Viaje.TaxistaId);
        EstadosViajesDto = await EstadoServices.Buscar(Viaje.EstadoId);

    }
}
