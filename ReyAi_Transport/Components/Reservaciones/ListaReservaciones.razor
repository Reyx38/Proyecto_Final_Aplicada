@page "/ListaReservaciones"
@using Microsoft.AspNetCore.Components.QuickGrid

@inject ReservacionesServices ReservacionesService
@rendermode InteractiveServer
<link rel="stylesheet" href="/Estilos/Reservaciones/ListReservaciones.css" />

<div class="container">
    <div class="overlay">
        <div class="detalles-container">
            <div class="card-header">
                <h5 class="card-title">Lista de reservaciones</h5>
            </div>
            <div class="card-body">
                <div>
                    <QuickGrid Items="@(Reservaciones.AsQueryable())" DefaultSort="@sortByFecha">
                        <div class="flex items-center">
                            <PropertyColumn Title="ID Reservación" Property="@(r => r.ReservacionId)" />
                            <PropertyColumn Title="Fecha" Property="@(r => r.Fecha)" Format="dd/MM/yyyy" />
                            <PropertyColumn Title="Monto" Property="@(r => r.Monto)" />
                            <PropertyColumn Title="Pasajesros" Property="@(r => r.CantidadPasajeros)" />
                            <PropertyColumn Title="Destino" Property="@(r => r.ViajeDto)" />
                            <PropertyColumn Title="Estado" Property="@(r => r.EstadosReservacionesDto)" />

                        </div>
                      
                        <TemplateColumn Title="Acciones">
                            <div class="flex items-center">
                                <button class="btn btn-success btn-sm me-1"
                                        @onclick="@(() => CambiarEstado(context, 2))">
                                    Aceptar
                                </button>
                                <button class="btn btn-danger btn-sm"
                                        @onclick="@(() => CambiarEstado(context, 3))">
                                    Cancelar
                                </button>
                            </div>
                        </TemplateColumn>
                    </QuickGrid>
                </div>
            </div>
        </div>
    </div>
</div>


<p><strong>@mensaje</strong></p>

@code {
    private List<ReservacionesDto> Reservaciones = new();
    private string mensaje = string.Empty;

    // Configuración de ordenamiento por defecto (por fecha de la reservación)
    GridSort<ReservacionesDto> sortByFecha = GridSort<ReservacionesDto>
        .ByAscending(r => r.Fecha);

    protected override async Task OnInitializedAsync()
    {
        await CargarReservaciones();
    }

    private async Task CargarReservaciones()
    {
        Reservaciones = await ReservacionesService.Listar(r => true); // Cargar todas las reservaciones
    }

    private async Task CambiarEstado(ReservacionesDto reservacion, int nuevoEstado)
    {
        reservacion.EstadoId = nuevoEstado;
        var guardado = await ReservacionesService.Guardar(reservacion);
        if (guardado)
        {
            mensaje = $"Reservación {reservacion.ReservacionId} marcada como {nuevoEstado}.";
            await CargarReservaciones(); // Refresca la lista
        }
        else
        {
            mensaje = "Error al actualizar el estado.";
        }
    }

}
