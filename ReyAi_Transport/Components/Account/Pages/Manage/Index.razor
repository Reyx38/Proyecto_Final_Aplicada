@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using ReyAI_Trasport.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<section class="profile-section">
    <h3 class="text-center">Perfil</h3>

    <StatusMessage />

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <!-- Username field -->
                <div class="form-floating mb-3">
                    <input type="text" value="@username" class="form-control" placeholder="Please choose your username." disabled />
                    <label for="username" class="form-label">Nombre de usuario</label>
                </div>

                <!-- Phone number field -->
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number." />
                    <label for="phone-number" class="form-label">Numero de telefono</label>
                    <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
                </div>

                <!-- Save button -->
                <button type="submit" class="btn btn-primary w-100">Guardar</button>
            </EditForm>
        </div>
    </div>
</section>

<style>
    .profile-section {
        background-color: #f8f9fa;
        padding: 2rem 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .profile-section h3 {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 1.5rem;
        color: #343a40;
    }

    .form-floating {
        position: relative;
    }

    .form-floating .form-label {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .form-floating .form-control {
        background-color: #ffffff;
        border: 1px solid #ced4da;
        font-weight: 500;
    }

    .form-floating .form-control:disabled {
        background-color: #e9ecef;
        opacity: 1;
    }

    /* Primary button styles */
    .btn-primary {
        background-color: #00b7c5;
        border: none;
        transition: background-color 0.3s;
    }

    .btn-primary:hover {
        background-color: #009aa6;
    }

    /* Validation messages */
    .text-danger {
        color: #dc3545;
    }
</style>


@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}
