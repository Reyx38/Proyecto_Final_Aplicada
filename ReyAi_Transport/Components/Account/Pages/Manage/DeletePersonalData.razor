@page "/Account/Manage/DeletePersonalData"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using ReyAI_Trasport.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<DeletePersonalData> Logger

<PageTitle>Delete Personal Data</PageTitle>

<StatusMessage Message="@message" />

<section class="delete-data-section">
    <h3 class="text-center">Eliminar datos personales</h3>

    <div class="alert alert-warning" role="alert">
        <p class="text-center">
            <strong>Eliminar estos datos eliminará permanentemente tu cuenta y no podrá ser recuperada.</strong>
        </p>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <EditForm Model="Input" FormName="delete-user" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                @if (requirePassword)
                {
                    <div class="form-floating mb-3">
                        <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Por favor, introduce tu contraseña." />
                        <label for="password" class="form-label">Contraseña</label>
                        <ValidationMessage For="() => Input.Password" class="text-danger" />
                    </div>
                }
                <button class="w-100 btn btn-lg btn-danger" type="submit">Eliminar datos y cerrar mi cuenta</button>
            </EditForm>
        </div>
    </div>
</section>

<style>
    .delete-data-section {
        background-color: #f8f9fa;
        padding: 2rem 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .delete-data-section h3 {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 1.5rem;
        color: #343a40;
    }

    .alert-warning {
        background-color: #ffeed9;
        border-color: #ffc107;
        color: #856404;
        text-align: center;
    }

    .delete-data-section .form-label {
        color: #495057;
    }

    .btn-danger {
        background-color: #ff6d3a;
        border: none;
        font-size: 1rem;
        padding: 0.75rem 1.5rem;
        transition: background-color 0.3s;
    }

    .btn-danger:hover {
        background-color: #e65521;
    }
</style>

@code {
    private string? message;
    private ApplicationUser user = default!;
    private bool requirePassword;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Input ??= new();
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        requirePassword = await UserManager.HasPasswordAsync(user);
    }

    private async Task OnValidSubmitAsync()
    {
        if (requirePassword && !await UserManager.CheckPasswordAsync(user, Input.Password))
        {
            message = "Error: Incorrect password.";
            return;
        }

        var result = await UserManager.DeleteAsync(user);
        if (!result.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred deleting user.");
        }

        await SignInManager.SignOutAsync();

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' deleted themselves.", userId);

        RedirectManager.RedirectToCurrentPage();
    }

    private sealed class InputModel
    {
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
    }
}
