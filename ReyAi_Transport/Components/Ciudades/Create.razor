@page "/Ciudades/Create"

@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject ToastService Toast
<Toasts class="p-3" AutoHide="true" Delay="4000" Placement="ToastsPlacement.TopRight" />
<link rel="stylesheet" href="/Estilos/Viajes/Crear.css" />

@inject CiudadServices CiudadService
@inject NavigationManager NavigationManager

<PageTitle>Crear Ciudades</PageTitle>

<EditForm Model="CiudadesDto" OnValidSubmit="Guardar" FormName="CreatCiudades">
	<DataAnnotationsValidator />
	<div class="overlay"></div>

	<div class="container">
		<div class="card">
			<div class="card-header">
				<div class="card-title">
					<h2> Registrar Ciudades</h2>
				</div>
			</div>
			<div class="card-body">
				<div class="form-group">
					<label class="form-label">Nombre de ciudad</label>
					<InputText class="form-control" @bind-Value="CiudadesDto.Nombre" />
					<ValidationMessage For="@(() => CiudadesDto.Nombre)" />
				</div>
			</div>
			<div class=" card-footer">
				<a href="/Ciudades" class="btn btn-light bi bi-arrow-left-square">Volver</a>
				<button type="submit" class="btn btn-Guardar bi bi-floppy"> Guardar</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	public CiudadesDto CiudadesDto { get; set; } = new();


	public async Task Guardar()
	{
		var guardado = await CiudadService.Guardar(CiudadesDto);
		
		if (guardado)
		{
			Toast.Notify(new(ToastType.Success, $"Ciudad agregado con éxito."));
			await Task.Delay(2000);
			NavigationManager.NavigateTo("/Ciudades");
		}
		else
		{
			Toast.Notify(new(ToastType.Danger, $"Error al agregar la ciudad, intentelo de nuevo."));
		}
	}

}
